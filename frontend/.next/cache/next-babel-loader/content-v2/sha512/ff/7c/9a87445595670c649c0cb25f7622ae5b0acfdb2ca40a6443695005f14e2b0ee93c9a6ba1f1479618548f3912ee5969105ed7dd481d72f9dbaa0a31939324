{"ast":null,"code":"import { CONTRACT_ADDRESS } from \"./getContact\";\nexport var INFURA_ID = \"Fdpvr1ELduCwcOyg8DRM8CPjetBYg0QB\"; //\"460f40a260564ac4a4f4b3fffb032dad\";\n\nexport var NETWORKS = {\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    token: \"ETH\",\n    chainIdHex: \"0x1\",\n    rpcUrl: \"https://mainnet.infura.io/v3/\".concat(INFURA_ID),\n    blockExplorer: \"https://etherscan.io/\"\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    token: \"ETH\",\n    chainIdHex: \"0x2a\",\n    rpcUrl: \"https://kovan.infura.io/v3/\".concat(INFURA_ID),\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\" // https://faucet.kovan.network/\n\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    token: \"ETH\",\n    chainIdHex: \"0x4\",\n    rpcUrl: \"https://rinkeby.infura.io/v3/\".concat(INFURA_ID),\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\"\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    token: \"ETH\",\n    chainIdHex: \"0x3\",\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: \"https://ropsten.infura.io/v3/\".concat(INFURA_ID)\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    token: \"ETH\",\n    chainIdHex: \"0x5\",\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: \"https://goerli.infura.io/v3/\".concat(INFURA_ID)\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    token: \"DAI\",\n    chainIdHex: \"0x64\",\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\"\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    token: \"MATIC\",\n    chainIdHex: \"0x89\",\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://polygon-rpc.com/\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://polygonscan.com/\"\n  },\n  mumbai: {\n    name: \"maticmum\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    token: \"MATIC\",\n    chainIdHex: \"0x13881\",\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com/\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai.polygonscan.com/\"\n  }\n};\nexport var getNetwork = function getNetwork(chainId) {\n  var chainIdStr = parseInt(chainId);\n  var filtereNetwork = Object.keys(NETWORKS).filter(function (el) {\n    return NETWORKS[el].chainId === chainIdStr;\n  });\n  return NETWORKS[filtereNetwork[0]];\n};\nexport var CURRENT_NETWORK = getNetwork(process.env.NEXT_PUBLIC_CHAIN_ID);\nexport var TRANSACTION_LINK = CURRENT_NETWORK.blockExplorer + \"tx/\"; // \"https://rinkeby.etherscan.io/tx/\";\n\nexport var OPENSEA_LINK = \"https://testnets.opensea.io/assets/mumbai/\" + CONTRACT_ADDRESS;\nexport var OPENSEA_COLLECTION_LINK = \"https://testnets.opensea.io/collection/1-million-signatures-vwoajmf3fb\";","map":null,"metadata":{},"sourceType":"module"}