{"ast":null,"code":"import _regeneratorRuntime from \"/home/harshitsinghai/Documents/Projects/web3/signature-dao/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/harshitsinghai/Documents/Projects/web3/signature-dao/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\nimport { INFURA_ID, CURRENT_NETWORK } from \"utils/constants\";\nimport { JsonRpcProvider } from \"@ethersproject/providers\"; // const INFURA_ID = \"6f006a0521514865af0036763e47b34e\";\n\nexport var getWeb3Modal = function getWeb3Modal() {\n  var web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    // optional\n    cacheProvider: true,\n    // optional\n    // disableInjectedProvider: true,\n    providerOptions: {\n      walletconnect: {\n        \"package\": WalletConnectProvider,\n        // required\n        options: {\n          infuraId: INFURA_ID\n        }\n      },\n      authereum: {\n        \"package\": Authereum // required\n\n      }\n    }\n  });\n  return web3Modal;\n};\nexport var switchNetwork = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (window.ethereum) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return window.ethereum.request({\n              method: \"wallet_switchEthereumChain\",\n              params: [{\n                chainId: CURRENT_NETWORK.chainIdHex\n              }]\n            });\n\n          case 5:\n            _context.next = 18;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (!(_context.t0.code === 4902)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.prev = 10;\n            _context.next = 13;\n            return window.ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [{\n                chainId: CURRENT_NETWORK.chainIdHex,\n                chainName: CURRENT_NETWORK.name,\n                nativeCurrency: {\n                  name: CURRENT_NETWORK.name,\n                  symbol: CURRENT_NETWORK.token,\n                  // 2-6 characters long\n                  decimals: 18\n                },\n                blockExplorerUrls: [CURRENT_NETWORK.blockExplorer],\n                rpcUrls: [CURRENT_NETWORK.blockExplorer]\n              }]\n            });\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t1 = _context[\"catch\"](10);\n            console.error(_context.t1);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 7], [10, 15]]);\n  }));\n\n  return function switchNetwork() {\n    return _ref.apply(this, arguments);\n  };\n}(); // export const defaultProvider = ethers.getDefaultProvider(\n//   CURRENT_NETWORK.name,\n//   INFURA_ID\n// );\n\nexport var defaultProvider = new JsonRpcProvider(CURRENT_NETWORK.rpcUrl, CURRENT_NETWORK.name);","map":null,"metadata":{},"sourceType":"module"}